// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Db;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250416040211_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Apontamento", b =>
                {
                    b.Property<Guid>("ApontamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorasApontadas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorasFinalizadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApontamentoId", "OS");

                    b.HasIndex("RecursoId");

                    b.ToTable("Apontamentos");
                });

            modelBuilder.Entity("server.Models.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("server.Models.Empresa", b =>
                {
                    b.Property<Guid>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("server.Models.Projeto", b =>
                {
                    b.Property<Guid>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataIni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GerenteRecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjetoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("GerenteRecursoId");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("server.Models.Recurso", b =>
                {
                    b.Property<Guid>("RecursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecursoId");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("server.Models.Servico", b =>
                {
                    b.Property<Guid>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ServicoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("server.Models.SubTarefa", b =>
                {
                    b.Property<Guid>("IdSubTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnalistaRecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataIni")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoSubTarefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TarefaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSubTarefa");

                    b.HasIndex("AnalistaRecursoId");

                    b.HasIndex("TarefaId");

                    b.ToTable("SubTarefas");
                });

            modelBuilder.Entity("server.Models.Tarefa", b =>
                {
                    b.Property<Guid>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoordenadorRecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoTarefa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjetoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TarefaId");

                    b.HasIndex("CoordenadorRecursoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("server.Models.Apontamento", b =>
                {
                    b.HasOne("server.Models.Recurso", "Recurso")
                        .WithMany("Apontamentos")
                        .HasForeignKey("RecursoId");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("server.Models.Cliente", b =>
                {
                    b.HasOne("server.Models.Empresa", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("server.Models.Projeto", b =>
                {
                    b.HasOne("server.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("server.Models.Recurso", "Gerente")
                        .WithMany("Projetos")
                        .HasForeignKey("GerenteRecursoId");

                    b.Navigation("Cliente");

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("server.Models.Servico", b =>
                {
                    b.HasOne("server.Models.Empresa", "Empresa")
                        .WithMany("Servicos")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("server.Models.SubTarefa", b =>
                {
                    b.HasOne("server.Models.Recurso", "Analista")
                        .WithMany("SubTarefas")
                        .HasForeignKey("AnalistaRecursoId");

                    b.HasOne("server.Models.Tarefa", "Tarefa")
                        .WithMany("SubTarefas")
                        .HasForeignKey("TarefaId");

                    b.Navigation("Analista");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("server.Models.Tarefa", b =>
                {
                    b.HasOne("server.Models.Recurso", "Coordenador")
                        .WithMany("Tarefas")
                        .HasForeignKey("CoordenadorRecursoId");

                    b.HasOne("server.Models.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId");

                    b.Navigation("Coordenador");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("server.Models.Empresa", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("server.Models.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("server.Models.Recurso", b =>
                {
                    b.Navigation("Apontamentos");

                    b.Navigation("Projetos");

                    b.Navigation("SubTarefas");

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("server.Models.Tarefa", b =>
                {
                    b.Navigation("SubTarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
